#!/bin/sh
# Copyleft valaswig 2009-2010, pancake at nopcode.org

LANG=$1
MOD=$2
OMOD=${MOD}
COMPILE=Yes
ARG_VAPIDIR=""
EXT="c"

show_help () {
  echo "Usage: valaswig-cc [lang] [module-name] [-flags] vapifile .."
  echo "Example: valaswig-cc python r_bp -I/usr/include/r_bp r_bp.vapi"
  echo "  lang: python, ruby, perl, java, csharp, ..."
  echo "  --help,-h      show this help message"
  echo "  --version      show version of valaswig"
  echo "  --vapidir=dir  show version of valaswig"
  echo "  --glib         assume vapi source is glib/gobject based"
  echo "  --test [lang]  test if it is possible to build"
  echo "  -I[path]       add includepath for SWIGFLAGS and CFLAGS"
  echo "  -L[path]       append library path to LDFLAGS"
  echo "  -l[lib]        append to LDFLAGS to link a library"
  echo "  -C             do not compile, just let the .c and .i files"
  exit 0
}

TEST=0
case "$1" in
"--test")
  TEST=1
  LANG=$2
  ;;
"--version"|"-V")
  valaswig --version
  swig -version | grep SWIG
  ${CC} --version | grep ${CC}
  exit 0
  ;;
"--help"|"-h")
  show_help
  ;;
esac

[ -z "${LANG}" ] && show_help
[ -z "${CC}" ] && CC=gcc

case "${LANG}" in
"python")
  if [ -d /usr/include/python2.6 ]; then
    CFLAGS="${CFLAGS} -I/usr/include/python2.6"
    LDFLAGS="${CFLAGS} -lpython2.6"
  else
    CFLAGS="${CFLAGS} -I/usr/include/python2.5"
    LDFLAGS="${CFLAGS} -lpython2.5"
  fi
  OMOD="_${MOD}"
  ;;
"ruby")
  if [ "`ruby --version | grep 1.8`" ]; then
    RB_CFLAGS=`ruby -e 'require "mkmf"; print "-I" + Config::CONFIG["archdir"];'`
    CFLAGS="${CFLAGS} ${RB_CFLAGS}"
  else
  if [ "`ruby --version | grep 1.9`" ]; then
    RB_CFLAGS=`ruby -e 'require "mkmf"; a=Config::CONFIG["rubyhdrdir"]; print "-I#{a} -I#{a}/" + Config::CONFIG["arch"];'`
    CFLAGS="${CFLAGS} ${RB_CFLAGS}"
  fi ; fi
  ;;
"perl")
  LC_ALL=C # fix anoying perl warning
  export LC_ALL
  CFLAGS="${CFLAGS} `perl -MExtUtils::Embed -e ccopts`"
  LDFLAGS="${LDFLAGS} `perl -MExtUtils::Embed -e ldopts`"
  ;;
"java")
  CFLAGS="${CFLAGS} -I/opt/java/include -I/opt/java/include/linux"
  ;;
"csharp")
  ;;
esac

shift
shift

while : ; do
  # XXX ultra ugly switch case
  if [ "`echo $1 | grep -- '-I'`" ]; then
    CFLAGS="$1 ${CFLAGS}"
    SWIGFLAGS="$1 ${SWIGFLAGS}"
  else
  if [ "`echo $1 | grep -- '--vapidir'`" ]; then
    ARG_VAPIDIR="`echo $1|sed -e 's,=, ,'`"
  else
  if [ "`echo $1 | grep -- '-x'`" ]; then
    CC="g++"
    EXT="cxx"
    SWIGFLAGS="-c++ ${SWIGFLAGS}"
    VALASWIGFLAGS="-x ${VALASWIGFLAGS}"
  else
  if [ "`echo $1 | grep -- '-l'`" ]; then
    LDFLAGS="$1 ${LDFLAGS}"
  else
  if [ "`echo $1 | grep -- '--glib'`" ]; then
    SWIGFLAGS="$1 ${SWIGFLAGS}"
  else
  if [ "`echo $1 | grep -- '-L'`" ]; then
    LDFLAGS="$1 ${LDFLAGS}"
  else
  if [ "`echo $1 | grep -- '-C'`" ]; then
    COMPILE=""
  else
    FILES="$1 ${FILES}"
  fi ; fi ; fi ; fi ; fi ; fi ; fi
  shift
  [ -z "$1" ] && break
done

SWIGCPP="-DG_BEGIN_DECLS -DG_END_DECLS"

if [ $TEST = 1 ]
then
  DIR=`mktemp -d`
  if [ ! $? = 0 ]; then
    echo "Cannot create temporary directory"
    exit 1
  fi
  cd ${DIR}
  echo "%module ${MOD}" > ${MOD}.i
  swig ${SWIGCPP} ${SWIGFLAGS} -${LANG} ${MOD}.i >/dev/null 2>&1
  if [ ! $? = 0 ]; then exit 1 ; fi
  ${CC} $@ -fPIC -shared ${MOD}_wrap.c ${CFLAGS} -o ${OMOD}.so ${LDFLAGS} >/dev/null 2>&1
  if [ ! $? = 0 ]; then exit 1 ; fi
  rm -rf ${DIR}
else
  echo valaswig ${VALASWIGFLAGS} ${ARG_VAPIDIR} -o ${MOD}.i -m ${MOD} ${FILES}
  valaswig ${VALASWIGFLAGS} ${ARG_VAPIDIR} -o ${MOD}.i -m ${MOD} ${FILES} || exit 1
  echo swig ${SWIGCPP} ${SWIGFLAGS} -${LANG} ${MOD}.i
  swig ${SWIGCPP} ${SWIGFLAGS} -${LANG} ${MOD}.i || exit 1
  if [ -n "${COMPILE}" ]; then
    echo ${CC} $@ -fPIC -shared ${MOD}_wrap.${EXT} ${CFLAGS} -o ${OMOD}.so ${LDFLAGS}
    ${CC} $@ -fPIC -shared ${MOD}_wrap.${EXT} ${CFLAGS} -o ${OMOD}.so ${LDFLAGS} || exit 1
  fi
fi
